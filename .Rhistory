bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
ggplot(data = bike, aes(x=factor(gender,labels=c("male","female","unkown")),y=distance,color=factor(gender,labels=c("male","female","unkown"))))+geom_jitter()
bike$gender=factor(gender,levels=c(0,1,2),labels=c("unkown","male","female"))
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender),y=distance,color=factor(gender,labels=c("male","female","unkown"))))+geom_jitter()
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
ggplot(data = bike, aes(x=gender,y=tripdiration,color=gender))+geom_jitter()
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()
str(bike)
bike$start.time.of.day=strptime(bike$starttime,format = "%m/%d/%Y %H:%M%S")
bike$start.time.of.day=as.POSIXct.date(bike$starttime)
bike$start.time.of.day=as.date(bike$starttime)
bike$start.time.of.day=as.Date(bike$starttime)
bike$start.time.of.day=strptime(bike$starttime,format = "%m/%d/%Y %H:%M%S")
View(bike)
bike$start.time.of.day=strptime(bike$starttime,format = "%m/%d/%Y %H:%M")
bike$start.time.of.day=format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H")
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"))
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")))
table(bike$day.of.week)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
table(bike$day.of.week)
ggplot()+geom_bar(data=table(bike$day.of.week))
ggplot()+geom_bar(data=table(bike$day.of.week),aes(x=bike$day.of.week))
ggplot(data=table(bike$day.of.week),aes(x=bike$day.of.week))+geom_bar()
ggplot(data=table(bike$day.of.week),aes(x=bike$day.of.week))+geom_bar()
ggplot(data=bike$day.of.week,aes(x=bike$day.of.week))+geom_bar()
barplot(table(bike$start.time.of.day))
barplot(table(bike$start.time.of.day))
barplot(table(bike$end.time.of.day))
barplot(table(bike$day.of.week))
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(bike$start.time.of.day))
barplot(table(bike$end.time.of.day))
barplot(table(bike$day.of.week))
df=filter(bike,day.of.week=="Sun"|day.of.week=="Sat")
df=filter(bike,day.of.week=="Sun"|day.of.week=="Sat")
barplot(table(bike$start.time.of.day))
barplot(table(bike$end.time.of.day))
barplot(table(bike$day.of.week))
View(df)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$end.time.of.day))
barplot(table(filter(bike,day.of.week!="Sun"|day.of.week!="Sat")$start.time.of.day))
barplot(table(filter(bike,day.of.week!="Sun"|day.of.week!="Sat")$end.time.of.day))
df2=filter(bike,day.of.week!="Sun"|day.of.week!="Sat")
View(df2)
df2=filter(bike,day.of.week!="Sun" & day.of.week!="Sat")
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$end.time.of.day))
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day))
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$end.time.of.day))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend")
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$end.time.of.day),main = "End Time in the Weekend")
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday")
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$end.time.of.day),main = "End Time in the Weekday")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,10000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend")
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend")
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday")
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.axis = 0.5)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.axis = 0.2)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.2)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.5)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.8)
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
(p <- ggplot(bike, aes(start.time.of.day, start.station.id)) + geom_tile(aes(fill = rescale),
colour = "white") + scale_fill_gradient(low = "white",
high = "steelblue"))
(p <- ggplot(bike, aes(start.time.of.day, start.station.id)) + geom_tile(aes(fill = count()),
colour = "white") + scale_fill_gradient(low = "white",
high = "steelblue"))
(p <- ggplot(bike, aes(start.time.of.day, start.station.id)) + geom_tile(x=start.station.id,aes(fill = count()),
colour = "white") + scale_fill_gradient(low = "white",
high = "steelblue"))
(p <- ggplot(bike, aes(start.time.of.day, start.station.id)) + geom_tile(bike$start.station.id,aes(fill = count()),
colour = "white") + scale_fill_gradient(low = "white",
high = "steelblue"))
ggplot(data=bike,aes(x=start.time.of.day,y=start.station.id))+geom_bin2d()
ggplot(data=bike,aes(x=start.time.of.day,y=start.station.name))+geom_bin2d()
sort(table(bike$start.station.name), decreasing=TRUE)[1:10]
sort(table(bike$end.station.name), decreasing=TRUE)[1:10]
filter(bike,start.time.of.day>01)
filter(bike,start.time.of.day=='06)
filter(bike,start.time.of.day=='06')
filter(bike,start.time.of.day=="06"")
filter(bike,start.time.of.day=="06")
filter(bike,start.time.of.day="06")
filter(bike,unfactor(start.time.of.day)=="06")
filter(bike,as.numeric(start.time.of.day)=="06")
filter(bike,as.numeric(start.time.of.day)==06)
filter(bike,as.numeric(start.time.of.day)>7,as.numeric(start.time.of.day)<10)
filter(bike,as.numeric(start.time.of.day)<10)
mornings=filter(bike,as.numeric(start.time.of.day)>7,as.numeric(start.time.of.day)<10)
View(mornings)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=12)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=10)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
mornings=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
middays=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
evenings=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
View(middays)
View(middays)
View(evenings)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
sort(table(bike$start.station.name), decreasing=TRUE)[1:10]
sort(table(bike$end.station.name), decreasing=TRUE)[1:10]
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(mornings.start$start.station.name), decreasing=TRUE)[1:10]
sort(table(mornings.start$start.station.name), decreasing=TRUE)[1:10]/5
sort(table(mornings.start$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=12)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week=="Sun"& day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
View(evenings.end)
View(mornings.end)
sort(table(filter(mornings.end,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
sort(table(bike$start.station.name), decreasing=TRUE)[1:10]
sort(table(bike$end.station.name), decreasing=TRUE)[1:10]
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.start,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.end,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
mo=lm(tripduration~usertype+gender+birth.year,data = bike)
mo=lm(tripduration~birth.year,data = bike)
mo=lm(tripduration~birth.year+gender,data = bike)
mo=lm(tripduration~birth.year+gender+usertype,data = bike)
View(bike)
View(bike)
fact_convert=function(usertype){
if (usertype=='Customer'){return(0)}
if (usertype=='Subscriber'){return(1)}
}
fact_convert=function(usertype){
if (usertype=='Customer'){return(0)}
if (usertype=='Subscriber'){return(1)}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+usertype,data = bike)
fact_convert=function(usertype){
if (usertype=='Customer'){return(0)}
if (usertype=='Subscriber'){return(1)}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
View(bike)
fact_convert=function(usertype){
if (as.character(usertype)=='Customer'){return(0)}
if (as.character(usertype)=='Subscriber'){return(1)}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
View(bike)
fact_convert=function(usertype){
if (as.character(usertype)=='Customer'){0}
if (as.character(usertype)=='Subscriber'){1}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
fact_convert=function(usertype){
if (as.character(usertype)=='Customer'){1}
if (as.character(usertype)=='Subscriber'){0}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
if (as.character(usertype)==as.character('Customer')){1}
fact_convert=function(usertype){
if (as.character(usertype)==as.character('Customer')){1}
if (as.character(usertype)=='Subscriber'){0}
}
bike$is.customer=fact_convert(bike$usertype)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
mo=lm(tripduration~birth.year+gender+usertype,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber'),labels = c(0,1))
mo=lm(tripduration~birth.year+gender+usertype,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber'),labels = c(0,1))
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber'),labels = c(0,1))
mo=lm(tripduration~birth.year+gender,data = bike)
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber',''),labels = c(0,1,2))
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber',''),labels = c(0,1,2))
mo=lm(tripduration~is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber',''),labels = c(0,1,2))
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber',''),labels = c(0,1,2))
mo=lm(tripduration~birth.year+gender*is.customer,data = bike)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber'),labels = c(0,1))
mo=lm(tripduration~birth.year+gender+is.customer,data = bike)
bikemo=na.omit(bike)
View(bikemo)
bike$is.customer=factor(bike$usertype,levels = c('Customer','Subscriber'),labels = c(0,1))
bikemo=na.omit(bike)
mo=lm(tripduration~birth.year+gender+is.customer,data = bikemo)
mo=lm(tripduration~birth.year+gender,data = bike)
mo=lm(tripduration~birth.year+gender+birth.year*gender,data = bike)
summarise(mo)
summary(mo)
m2o=lm(distance~birth.year+gender+birth.year*gender,data = bike)
summary(mo)
mo2=lm(distance~birth.year+gender+birth.year*gender,data = bike)
summary(mo2)
mo=lm(tripduration~birth.year+gender+birth.year*gender,data = bike)
summary(mo)
View(bike)
bike$age=2015-bike$birth.year
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
sort(table(bike$start.station.name), decreasing=TRUE)[1:10]
sort(table(bike$end.station.name), decreasing=TRUE)[1:10]
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.end,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.start,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.end,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
mo=lm(tripduration~birth.year+gender+birth.year*gender,data = bike)
summary(mo)
mo2=lm(distance~birth.year+gender+birth.year*gender,data = bike)
summary(mo2)
bike$age=factor(2015-bike$birth.year)
ggplot(data = bike,aes(x=start.time.of.day,y=age))+geom_bin2d()
bike$age=factor(2015-bike$birth.year)
bike$ageint=2015-bike$birth.year
ggplot(data = filter(bike,ageint<=70),aes(x=start.time.of.day,y=age))+geom_bin2d()
bike$age=factor(2015-bike$birth.year)
bike$ageint=2015-bike$birth.year
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_bin2d()
bike$age=factor(2015-bike$birth.year)
bike$ageint=2015-bike$birth.year
ggplot(data = filter(bike,ageint<=70),aes(x=start.time.of.day,y=age))+geom_bin2d()+ scale_fill_gradientn(limits=c(0,50), breaks=seq(0, 40, by=10), colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_bin2d()+ scale_fill_gradientn(limits=c(0,50), breaks=seq(0, 40, by=10), colours=rainbow(4))
bike$age=factor(2015-bike$birth.year)
bike$ageint=2015-bike$birth.year
ggplot(data = filter(bike,ageint<=70),aes(x=start.time.of.day,y=age))+geom_bin2d()+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_bin2d()+ scale_fill_gradientn(limits=c(0,50), breaks=seq(0, 40, by=10), colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_bin2d()+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_bin2d()+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_tile(data=filter(bike,ageint<=70),aes(fill=tripduration))+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_tile(data=filter(bike,ageint<=70),aes(fill=mean(tripduration))+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_tile(data=filter(bike,ageint<=70),aes(fill=mean(tripduration))+ scale_fill_gradientn(colours=rainbow(4))
ggplot(data = filter(bike,ageint<=70),aes(x=day.of.week,y=age))+geom_point()
print(sort(table(bike$start.station.name), decreasing=TRUE)[1:10])
print(sort(table(bike$end.station.name), decreasing=TRUE)[1:10])
print(sort(table(bike$start.station.name), decreasing=TRUE)[1:10])
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
print(sort(table(bike$start.station.name), decreasing=TRUE)[1:10])
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.end,day.of.week!="Sun"& day.of.week!="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.start,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.end,day.of.week=="Sun"| day.of.week=="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
mo=lm(tripduration~birth.year+gender+birth.year*gender,data = bike)
summary(mo)
mo2=lm(distance~birth.year+gender+birth.year*gender,data = bike)
summary(mo2)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
bike=read.csv("citibike.csv")
library(geosphere)#for calculating distance
bike$distance <- distHaversine(bike[ ,c("start.station.longitude", "start.station.latitude")],bike[ ,c("end.station.longitude", "end.station.latitude")])
bike$gender=factor(bike$gender,levels=c(0,1,2),labels=c("unkown","male","female"))
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_jitter()+ggtitle("Distance by Gender")
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_jitter()+ggtitle("Trip Duration by Gender")
ggplot(data = bike, aes(x=gender,y=distance,color=gender))+geom_boxplot()+ggtitle("Distance by Gender")+ylim(-10,7000)
ggplot(data = bike, aes(x=gender,y=tripduration,color=gender))+geom_boxplot()+ggtitle("Trip Duration by Gender")+ylim(-10,4000)
bike$start.time.of.day=factor(format(strptime(bike$starttime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$end.time.of.day=factor(format(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M"),"%H"))
bike$day.of.week=factor(weekdays(strptime(bike$stoptime,format = "%m/%d/%Y %H:%M")),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),labels=c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun"))
barplot(table(filter(bike,day.of.week=="Sun"|day.of.week=="Sat")$start.time.of.day),main = "Start Time in the Weekend",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(filter(bike,day.of.week!="Sun"& day.of.week!="Sat")$start.time.of.day),main = "Start Time in the Weekday",ylab="Number of Rides for the Year", xlab="Hour of Departure",cex.names  = 0.7)
barplot(table(bike$day.of.week),main = "Rides by Day of the Week",ylab="Number of Rides for the Year", xlab="Day of Ride",cex.names  = 0.7)
print(sort(table(bike$start.station.name), decreasing=TRUE)[1:10])
mornings.start=filter(bike,as.numeric(start.time.of.day)>=7,as.numeric(start.time.of.day)<=11)
evenings.start=filter(bike,as.numeric(start.time.of.day)>=18,as.numeric(start.time.of.day)<=22)
middays.start=filter(bike,as.numeric(start.time.of.day)>=12,as.numeric(start.time.of.day)<=16)
mornings.end=filter(bike,as.numeric(end.time.of.day)>=7,as.numeric(end.time.of.day)<=11)
evenings.end=filter(bike,as.numeric(end.time.of.day)>=18,as.numeric(end.time.of.day)<=22)
middays.end=filter(bike,as.numeric(end.time.of.day)>=12,as.numeric(end.time.of.day)<=16)
sort(table(filter(mornings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(mornings.end,day.of.week!="Sun"& day.of.week!="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.start,day.of.week!="Sun"& day.of.week!="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(evenings.end,day.of.week!="Sun"& day.of.week!="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.start,day.of.week=="Sun"| day.of.week=="Sat")$start.station.name), decreasing=TRUE)[1:10]/(5*60)
sort(table(filter(middays.end,day.of.week=="Sun"| day.of.week=="Sat")$end.station.name), decreasing=TRUE)[1:10]/(5*60)
mo=lm(tripduration~birth.year+gender+birth.year*gender,data = bike)
summary(mo)
mo2=lm(distance~birth.year+gender+birth.year*gender,data = bike)
summary(mo2)
knitr::opts_chunk$set(echo = TRUE)
# Write code here for
# Load the data (read.csv)
# Explore the data (head, str, summary)
# Clean the data (are columns well classified, do you need to factorize something, are there NAs, are there negative values?)
# Note that gender 1 = male, gender 2 = female
# race 1 = african american, 2 = hispanic, 3 = mixed, 4 = other
df=read.csv('income.csv')
head(df)
#Enter your answer here
#some income is negative value. might be some error in the data entry process
df$income[df$income<0]=NA
df$weight[df$weight<0]=NA
#removed all negative income value
# Write code here for
# Building relevant charts
library(ggplot2)
ggplot(data = df, aes(x=weight,y=income))+geom_point()+geom_smooth()
ggplot(data = df, aes(x=gender,y=income,color=factor(gender)))+geom_jitter()#geom_bar(stat = "summary",fun.y='mean')
ggplot(data = df, aes(x=race,y=income,color=factor(race)))+geom_jitter()#geom_bar(stat = "summary",fun.y='mean')
# Write code here for
# doing relevant data exploration (use tapply liberally)
gender_mean=tapply(df$income, factor(df$gender), mean,na.rm=TRUE)
race_mean=tapply(df$income, factor(df$race), mean,na.rm=TRUE)
# Run a Linear Regression with income as response variable
# and gender, race and weight as predictor variables (Model A)
mo=lm(income~factor(gender)+factor(race)+weight, data = df)
summary(mo)
# Run a Linear Regression including an interaction between weight and gender
mo2=lm(income~factor(gender)+factor(race)+weight+factor(gender)*weight, data = df)
summary(mo2)
bike$age=factor(2015-bike$birth.year)
bike$ageint=2015-bike$birth.year
ggplot(data = filter(bike,ageint<=70),aes(x=start.time.of.day,y=age))+geom_bin2d()+ scale_fill_gradientn(colours=rainbow(4))
